/* Generated By:JavaCC: Do not edit this line. MediawikiScannerTokenManager.java */
package mo.umac.wikianalysis.lexer;
import java.io.*;
import java.util.*;

/** Token Manager. */
public class MediawikiScannerTokenManager implements MediawikiScannerConstants
{
        int prevLexState;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 78;
            return 144;
         }
         if ((active1 & 0x3000000L) != 0L)
            return 67;
         if ((active1 & 0xc00800L) != 0L)
         {
            jjmatchedKind = 78;
            return -1;
         }
         return -1;
      case 1:
         if ((active1 & 0x1000000L) != 0L)
            return 68;
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 151;
         }
         if ((active1 & 0xc00800L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 171;
         }
         if ((active1 & 0x400000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 172;
         }
         return -1;
      case 4:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 172;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 39:
         return jjMoveStringLiteralDfa1_3(0xc00000L);
      case 60:
         return jjMoveStringLiteralDfa1_3(0x40000L);
      case 91:
         jjmatchedKind = 89;
         return jjMoveStringLiteralDfa1_3(0x1000000L);
      case 93:
         return jjStopAtPos(0, 91);
      case 125:
         return jjMoveStringLiteralDfa1_3(0x800L);
      default :
         return jjMoveNfa_3(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 39:
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 87;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_3(active1, 0x400000L);
      case 47:
         return jjMoveStringLiteralDfa2_3(active1, 0x40000L);
      case 91:
         if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_3(1, 88, 68);
         break;
      case 125:
         if ((active1 & 0x800L) != 0L)
            return jjStopAtPos(1, 75);
         break;
      default :
         break;
   }
   return jjStartNfa_3(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 39:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(2, 86);
         break;
      case 114:
         return jjMoveStringLiteralDfa3_3(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_3(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa4_3(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_3(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 102:
         return jjMoveStringLiteralDfa5_3(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_3(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_3(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(5, 82);
         break;
      default :
         break;
   }
   return jjStartNfa_3(4, 0L, active1);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 171;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 172:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(4, 6);
                  else if (curChar == 62)
                  {
                     if (kind > 85)
                        kind = 85;
                  }
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  break;
               case 171:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(4, 6);
                  else if (curChar == 62)
                  {
                     if (kind > 85)
                        kind = 85;
                  }
                  break;
               case 0:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 79)
                        kind = 79;
                     jjCheckNAddStates(11, 18);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 76)
                        kind = 76;
                     jjCheckNAdd(85);
                  }
                  else if (curChar == 60)
                     jjAddStates(19, 20);
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 90;
                  else if (curChar == 61)
                  {
                     if (kind > 67)
                        kind = 67;
                     jjstateSet[jjnewStateCnt++] = 62;
                  }
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 59;
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(100);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                  }
                  else if (curChar == 13)
                     jjAddStates(21, 29);
                  if (curChar == 60)
                     jjAddStates(30, 32);
                  break;
               case 144:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 1:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 58)
                     jjAddStates(33, 37);
                  break;
               case 4:
                  if ((0x3ff680000000000L & l) != 0L)
                     jjCheckNAddTwoStates(4, 2);
                  break;
               case 5:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(38, 45);
                  break;
               case 6:
                  if ((0x2fff6fd200000000L & l) != 0L)
                     jjCheckNAddStates(46, 48);
                  break;
               case 7:
                  if (curChar == 37)
                     jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(46, 48);
                  break;
               case 11:
                  if (curChar == 37)
                     jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(49, 54);
                  break;
               case 14:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(49, 54);
                  break;
               case 15:
                  if (curChar == 58)
                     jjCheckNAdd(16);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(55, 58);
                  break;
               case 17:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(59, 63);
                  break;
               case 18:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(59, 63);
                  break;
               case 19:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(59, 63);
                  break;
               case 22:
                  if (curChar != 63)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(64, 66);
                  break;
               case 23:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(64, 66);
                  break;
               case 24:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 25:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(64, 66);
                  break;
               case 27:
                  if (curChar != 35)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 28:
                  if ((0xafffefd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 29:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 32:
                  if (curChar == 37)
                     jjCheckNAddTwoStates(8, 12);
                  break;
               case 33:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 34:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(67, 70);
                  break;
               case 35:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(71, 75);
                  break;
               case 36:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(71, 75);
                  break;
               case 39:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 80);
                  break;
               case 40:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 80);
                  break;
               case 41:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 80);
                  break;
               case 44:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(47, 50);
                  break;
               case 47:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(81, 85);
                  break;
               case 50:
                  if ((0x2bff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(81, 85);
                  break;
               case 51:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(86, 90);
                  break;
               case 52:
                  if ((0x2fff6fd200000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(86, 90);
                  break;
               case 53:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(86, 90);
                  break;
               case 56:
                  if ((0x2bff6fd200000000L & l) != 0L)
                     jjCheckNAddTwoStates(47, 50);
                  break;
               case 59:
                  if (curChar == 33 && kind > 62)
                     kind = 62;
                  break;
               case 60:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar != 61)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if (curChar != 61)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAddStates(91, 94);
                  break;
               case 63:
                  if (curChar == 61 && kind > 67)
                     kind = 67;
                  break;
               case 64:
                  if (curChar != 61)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAdd(63);
                  break;
               case 65:
                  if (curChar != 61)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAddTwoStates(63, 64);
                  break;
               case 66:
                  if (curChar != 61)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjCheckNAddStates(95, 97);
                  break;
               case 69:
                  if (curChar != 58)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(70, 72);
                  break;
               case 71:
               case 72:
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(70, 72);
                  break;
               case 83:
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(85);
                  break;
               case 86:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  break;
               case 87:
                  if ((0x3ff0000ffffd9ffL & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 88:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 89:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 90:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 91:
                  if (curChar == 59 && kind > 90)
                     kind = 90;
                  break;
               case 92:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(98, 104);
                  break;
               case 93:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(91);
                  break;
               case 94:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(93, 91);
                  break;
               case 95:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(105, 107);
                  break;
               case 96:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 97:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(112, 116);
                  break;
               case 98:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(117, 122);
                  break;
               case 99:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(100);
                  break;
               case 100:
                  if (curChar != 46)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(100);
                  break;
               case 102:
                  if (curChar == 13)
                     jjAddStates(21, 29);
                  break;
               case 103:
                  if (curChar == 10)
                     jjCheckNAdd(106);
                  break;
               case 105:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 10)
                     jjCheckNAdd(109);
                  break;
               case 110:
                  if (curChar == 10)
                     jjCheckNAdd(113);
                  break;
               case 111:
                  if (curChar != 43)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAdd(112);
                  break;
               case 112:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjCheckNAdd(112);
                  break;
               case 114:
                  if (curChar == 10)
                     jjCheckNAdd(117);
                  break;
               case 115:
                  if (curChar != 45)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(116);
                  break;
               case 116:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAdd(116);
                  break;
               case 118:
                  if (curChar == 10)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if (curChar == 33 && kind > 63)
                     kind = 63;
                  break;
               case 120:
                  if (curChar == 10)
                     jjCheckNAdd(121);
                  break;
               case 121:
                  if ((0xc00040800000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAddTwoStates(121, 122);
                  break;
               case 122:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjCheckNAdd(122);
                  break;
               case 123:
                  if (curChar == 10)
                     jjCheckNAdd(124);
                  break;
               case 124:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(125, 126);
                  break;
               case 125:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(125);
                  break;
               case 126:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(123, 127);
                  break;
               case 127:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(125);
                  break;
               case 128:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(127, 125);
                  break;
               case 129:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(128, 130);
                  break;
               case 130:
                  if (curChar != 61)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(131, 134);
                  break;
               case 131:
                  if (curChar == 10)
                     jjCheckNAdd(135);
                  break;
               case 132:
                  if (curChar == 45)
                     jjCheckNAdd(133);
                  break;
               case 133:
                  if (curChar != 45)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjCheckNAdd(133);
                  break;
               case 134:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 135:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 10 && kind > 79)
                     kind = 79;
                  break;
               case 137:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAddStates(11, 18);
                  break;
               case 138:
                  if (curChar == 60)
                     jjAddStates(30, 32);
                  break;
               case 140:
                  if ((0xffff7fffffffffffL & l) != 0L)
                     jjAddStates(135, 136);
                  break;
               case 141:
                  if (curChar == 62 && kind > 80)
                     kind = 80;
                  break;
               case 142:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 146:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjAddStates(137, 138);
                  break;
               case 147:
                  if (curChar == 62 && kind > 81)
                     kind = 81;
                  break;
               case 152:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  break;
               case 154:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 155:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(4, 6);
                  break;
               case 156:
                  if (curChar == 62 && kind > 85)
                     kind = 85;
                  break;
               case 157:
                  if (curChar == 60)
                     jjAddStates(19, 20);
                  break;
               case 159:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  break;
               case 161:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(143, 146);
                  break;
               case 162:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(147, 149);
                  break;
               case 163:
                  if (curChar == 62 && kind > 83)
                     kind = 83;
                  break;
               case 164:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 166:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(150, 153);
                  break;
               case 168:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(154, 157);
                  break;
               case 169:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(158, 160);
                  break;
               case 170:
                  if (curChar == 62 && kind > 84)
                     kind = 84;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 172:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 171:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 0:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(100);
                  }
                  else if ((0x78000001d0000001L & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                  }
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 67;
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  else if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 82;
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 57;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 68:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 144:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(150, 153);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 148;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(4, 2);
                  break;
               case 6:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(46, 48);
                  break;
               case 8:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(46, 48);
                  break;
               case 10:
                  if (curChar != 64)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(49, 54);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(49, 54);
                  break;
               case 14:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(49, 54);
                  break;
               case 18:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(59, 63);
                  break;
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(59, 63);
                  break;
               case 23:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(64, 66);
                  break;
               case 25:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(64, 66);
                  break;
               case 28:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddTwoStates(28, 29);
                  break;
               case 35:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(71, 75);
                  break;
               case 37:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(71, 75);
                  break;
               case 40:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 80);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(76, 80);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 46:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(47, 50);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(81, 85);
                  break;
               case 50:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(81, 85);
                  break;
               case 52:
                  if ((0x47fffffe87ffffffL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(86, 90);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  jjCheckNAddStates(86, 90);
                  break;
               case 56:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(47, 50);
                  break;
               case 57:
                  if (curChar == 124 && kind > 62)
                     kind = 62;
                  break;
               case 58:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 67:
                  if (curChar == 91)
                     jjAddStates(161, 162);
                  break;
               case 70:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(70, 72);
                  break;
               case 72:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(70, 72);
                  break;
               case 73:
               case 78:
                  if (curChar == 101)
                     jjCheckNAdd(69);
                  break;
               case 74:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 79:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 82:
                  if (curChar != 123)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(83);
                  break;
               case 83:
                  if ((0xcfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(83);
                  break;
               case 84:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 86:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  break;
               case 87:
                  if ((0x87fffffe07fffffeL & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 88:
                  if ((0x78000001d0000001L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 90:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(98, 104);
                  break;
               case 93:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(91);
                  break;
               case 94:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(93, 91);
                  break;
               case 95:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(105, 107);
                  break;
               case 96:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 97:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(112, 116);
                  break;
               case 98:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(117, 122);
                  break;
               case 99:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(100);
                  break;
               case 101:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(100);
                  break;
               case 104:
                  if (curChar != 124)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(105);
                  break;
               case 105:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjCheckNAdd(105);
                  break;
               case 106:
                  if (curChar == 123)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 108:
                  if (curChar == 125 && kind > 59)
                     kind = 59;
                  break;
               case 109:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 112:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 113:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 116:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 117:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 119:
                  if (curChar == 124 && kind > 63)
                     kind = 63;
                  break;
               case 139:
                  if (curChar == 102)
                     jjCheckNAddTwoStates(140, 142);
                  break;
               case 140:
                  jjCheckNAddTwoStates(140, 142);
                  break;
               case 143:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 145:
                  if (curChar == 102)
                     jjCheckNAddTwoStates(146, 147);
                  break;
               case 146:
                  jjCheckNAddTwoStates(146, 147);
                  break;
               case 148:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 149:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  break;
               case 152:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(7, 10);
                  break;
               case 153:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 154:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 158:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  break;
               case 159:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(139, 142);
                  break;
               case 160:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(143, 146);
                  break;
               case 161:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(143, 146);
                  break;
               case 165:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(150, 153);
                  break;
               case 166:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(150, 153);
                  break;
               case 167:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(154, 157);
                  break;
               case 168:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(154, 157);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(86, 87);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(100);
                  }
                  break;
               case 71:
               case 72:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(70, 72);
                  break;
               case 83:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 86:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(86, 87);
                  break;
               case 87:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 77)
                     kind = 77;
                  break;
               case 90:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(98, 104);
                  break;
               case 93:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(91);
                  break;
               case 94:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(93, 91);
                  break;
               case 95:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(105, 107);
                  break;
               case 96:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(108, 111);
                  break;
               case 97:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(112, 116);
                  break;
               case 98:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(117, 122);
                  break;
               case 99:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(100);
                  break;
               case 101:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(100);
                  break;
               case 105:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 58)
                     kind = 58;
                  jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 112:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 116:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 140:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(135, 136);
                  break;
               case 146:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(137, 138);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 171 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 78;
            return 87;
         }
         if ((active1 & 0xc00800L) != 0L)
         {
            jjmatchedKind = 78;
            return -1;
         }
         if ((active1 & 0x3000000L) != 0L)
            return 9;
         return -1;
      case 1:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 94;
         }
         if ((active1 & 0xc00800L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active1 & 0x1000000L) != 0L)
            return 10;
         return -1;
      case 2:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 114;
         }
         if ((active1 & 0x400000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 3:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 115;
         }
         return -1;
      case 4:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 78;
               jjmatchedPos = 0;
            }
            return 115;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 39:
         return jjMoveStringLiteralDfa1_2(0xc00000L);
      case 60:
         return jjMoveStringLiteralDfa1_2(0x40000L);
      case 91:
         jjmatchedKind = 89;
         return jjMoveStringLiteralDfa1_2(0x1000000L);
      case 125:
         return jjMoveStringLiteralDfa1_2(0x800L);
      default :
         return jjMoveNfa_2(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 39:
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 87;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active1, 0x400000L);
      case 47:
         return jjMoveStringLiteralDfa2_2(active1, 0x40000L);
      case 91:
         if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_2(1, 88, 10);
         break;
      case 125:
         if ((active1 & 0x800L) != 0L)
            return jjStopAtPos(1, 75);
         break;
      default :
         break;
   }
   return jjStartNfa_2(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 39:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(2, 86);
         break;
      case 114:
         return jjMoveStringLiteralDfa3_2(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_2(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa4_2(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_2(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 102:
         return jjMoveStringLiteralDfa5_2(active1, 0x40000L);
      default :
         break;
   }
   return jjStartNfa_2(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_2(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_2(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 62:
         if ((active1 & 0x40000L) != 0L)
            return jjStopAtPos(5, 82);
         break;
      default :
         break;
   }
   return jjStartNfa_2(4, 0L, active1);
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 114;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 114:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(167, 169);
                  else if (curChar == 62)
                  {
                     if (kind > 85)
                        kind = 85;
                  }
                  break;
               case 87:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 115:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  else if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(167, 169);
                  else if (curChar == 62)
                  {
                     if (kind > 85)
                        kind = 85;
                  }
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  break;
               case 1:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  else if ((0xc00040800000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddTwoStates(3, 4);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 79)
                        kind = 79;
                     jjCheckNAddStates(174, 181);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 76)
                        kind = 76;
                     jjCheckNAdd(24);
                  }
                  else if (curChar == 60)
                     jjAddStates(182, 183);
                  else if (curChar == 61)
                  {
                     if (kind > 55)
                        kind = 55;
                     jjCheckNAddStates(184, 186);
                  }
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 29;
                  else if (curChar == 33)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(39);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                  }
                  else if (curChar == 13)
                     jjAddStates(187, 195);
                  if (curChar == 60)
                     jjAddStates(196, 198);
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 7;
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 0:
                  if (curChar == 33 && kind > 52)
                     kind = 52;
                  break;
               case 2:
                  if (curChar == 33 && kind > 53)
                     kind = 53;
                  break;
               case 3:
                  if ((0xc00040800000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(4);
                  break;
               case 5:
                  if (curChar == 45)
                     jjCheckNAdd(6);
                  break;
               case 6:
                  if (curChar != 45)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 8:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 11:
                  if (curChar != 58)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(12, 14);
                  break;
               case 13:
               case 14:
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(12, 14);
                  break;
               case 24:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjCheckNAdd(24);
                  break;
               case 25:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if ((0x3ff0000ffffd9ffL & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 27:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 28:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(30, 31);
                  break;
               case 30:
                  if (curChar == 59 && kind > 90)
                     kind = 90;
                  break;
               case 31:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(199, 205);
                  break;
               case 32:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(30);
                  break;
               case 33:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(32, 30);
                  break;
               case 34:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 35:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(209, 212);
                  break;
               case 36:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(213, 217);
                  break;
               case 37:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAddStates(218, 223);
                  break;
               case 38:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(39);
                  break;
               case 39:
                  if (curChar != 46)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(39);
                  break;
               case 41:
                  if (curChar == 13)
                     jjAddStates(187, 195);
                  break;
               case 42:
                  if (curChar == 10)
                     jjCheckNAdd(45);
                  break;
               case 44:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 10)
                     jjCheckNAdd(48);
                  break;
               case 49:
                  if (curChar == 10)
                     jjCheckNAdd(52);
                  break;
               case 50:
                  if (curChar != 43)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(51);
                  break;
               case 51:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(51);
                  break;
               case 53:
                  if (curChar == 10)
                     jjCheckNAdd(56);
                  break;
               case 54:
                  if (curChar != 45)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAdd(55);
                  break;
               case 55:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAdd(55);
                  break;
               case 57:
                  if (curChar == 10)
                     jjCheckNAdd(2);
                  break;
               case 58:
                  if (curChar == 10)
                     jjCheckNAdd(3);
                  break;
               case 59:
                  if (curChar == 10)
                     jjCheckNAdd(60);
                  break;
               case 60:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 61:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(61);
                  break;
               case 62:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(224, 228);
                  break;
               case 63:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAdd(61);
                  break;
               case 64:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(63, 61);
                  break;
               case 65:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(229, 231);
                  break;
               case 66:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(232, 235);
                  break;
               case 67:
                  if (curChar == 10)
                     jjCheckNAdd(8);
                  break;
               case 68:
                  if (curChar == 10 && kind > 79)
                     kind = 79;
                  break;
               case 69:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjCheckNAddStates(174, 181);
                  break;
               case 72:
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 75:
                  if (curChar != 61)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(184, 186);
                  break;
               case 76:
                  if (curChar != 61)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddStates(236, 239);
                  break;
               case 77:
                  if (curChar == 61 && kind > 57)
                     kind = 57;
                  break;
               case 78:
                  if (curChar != 61)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAdd(77);
                  break;
               case 79:
                  if (curChar != 61)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddTwoStates(77, 78);
                  break;
               case 80:
                  if (curChar != 61)
                     break;
                  if (kind > 57)
                     kind = 57;
                  jjCheckNAddStates(240, 242);
                  break;
               case 81:
                  if (curChar == 60)
                     jjAddStates(196, 198);
                  break;
               case 83:
                  if ((0xffff7fffffffffffL & l) != 0L)
                     jjAddStates(243, 244);
                  break;
               case 84:
                  if (curChar == 62 && kind > 80)
                     kind = 80;
                  break;
               case 85:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 89:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjAddStates(245, 246);
                  break;
               case 90:
                  if (curChar == 62 && kind > 81)
                     kind = 81;
                  break;
               case 95:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  break;
               case 97:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  break;
               case 98:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(167, 169);
                  break;
               case 99:
                  if (curChar == 62 && kind > 85)
                     kind = 85;
                  break;
               case 100:
                  if (curChar == 60)
                     jjAddStates(182, 183);
                  break;
               case 102:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(247, 250);
                  break;
               case 104:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(251, 254);
                  break;
               case 105:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(255, 257);
                  break;
               case 106:
                  if (curChar == 62 && kind > 83)
                     kind = 83;
                  break;
               case 107:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 109:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(258, 261);
                  break;
               case 111:
                  if ((0x2fff608400000000L & l) != 0L)
                     jjCheckNAddStates(262, 265);
                  break;
               case 112:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(266, 268);
                  break;
               case 113:
                  if (curChar == 62 && kind > 84)
                     kind = 84;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 114:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  break;
               case 10:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 87:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(258, 261);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(247, 250);
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 91;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 115:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  break;
               case 1:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(39);
                  }
                  else if ((0x78000001d0000001L & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                  }
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 9;
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  else if (curChar == 124)
                     jjCheckNAddStates(269, 272);
                  else if (curChar == 123)
                     jjCheckNAddTwoStates(43, 71);
                  if (curChar == 124)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  break;
               case 2:
                  if (curChar == 124 && kind > 53)
                     kind = 53;
                  break;
               case 9:
                  if (curChar == 91)
                     jjAddStates(273, 274);
                  break;
               case 12:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 13:
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(12, 14);
                  break;
               case 14:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(12, 14);
                  break;
               case 15:
               case 20:
                  if (curChar == 101)
                     jjCheckNAdd(11);
                  break;
               case 16:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 21:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 25:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if ((0x87fffffe07fffffeL & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 27:
                  if ((0x78000001d0000001L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 29:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(30, 31);
                  break;
               case 31:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(199, 205);
                  break;
               case 32:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(30);
                  break;
               case 33:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(32, 30);
                  break;
               case 34:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(206, 208);
                  break;
               case 35:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(209, 212);
                  break;
               case 36:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(213, 217);
                  break;
               case 37:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(218, 223);
                  break;
               case 38:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(39);
                  break;
               case 40:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(39);
                  break;
               case 43:
                  if (curChar != 124)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(44);
                  break;
               case 45:
                  if (curChar == 123)
                     jjCheckNAdd(43);
                  break;
               case 47:
                  if (curChar == 125 && kind > 49)
                     kind = 49;
                  break;
               case 48:
                  if (curChar == 124)
                     jjCheckNAdd(47);
                  break;
               case 51:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 52:
                  if (curChar == 124)
                     jjCheckNAdd(50);
                  break;
               case 55:
                  if ((0xffffffffd7ffffffL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 56:
                  if (curChar == 124)
                     jjCheckNAdd(54);
                  break;
               case 70:
                  if (curChar == 123)
                     jjCheckNAddTwoStates(43, 71);
                  break;
               case 71:
                  if (curChar != 123)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(72);
                  break;
               case 72:
                  if ((0xcfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjCheckNAdd(72);
                  break;
               case 73:
                  if (curChar == 124)
                     jjCheckNAddStates(269, 272);
                  break;
               case 74:
                  if (curChar == 124 && kind > 52)
                     kind = 52;
                  break;
               case 82:
                  if (curChar == 102)
                     jjCheckNAddTwoStates(83, 85);
                  break;
               case 83:
                  jjCheckNAddTwoStates(83, 85);
                  break;
               case 86:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 88:
                  if (curChar == 102)
                     jjCheckNAddTwoStates(89, 90);
                  break;
               case 89:
                  jjCheckNAddTwoStates(89, 90);
                  break;
               case 91:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 92:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 94:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  break;
               case 95:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(163, 166);
                  break;
               case 96:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  break;
               case 97:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(170, 173);
                  break;
               case 101:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(247, 250);
                  break;
               case 102:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(247, 250);
                  break;
               case 103:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(251, 254);
                  break;
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(251, 254);
                  break;
               case 108:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(258, 261);
                  break;
               case 109:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(258, 261);
                  break;
               case 110:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(262, 265);
                  break;
               case 111:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(262, 265);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(25, 26);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 77)
                        kind = 77;
                     jjCheckNAdd(39);
                  }
                  break;
               case 13:
               case 14:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjCheckNAddTwoStates(12, 14);
                  break;
               case 25:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(25, 26);
                  break;
               case 26:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 77)
                     kind = 77;
                  break;
               case 29:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(30, 31);
                  break;
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(199, 205);
                  break;
               case 32:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(30);
                  break;
               case 33:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(32, 30);
                  break;
               case 34:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(206, 208);
                  break;
               case 35:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(209, 212);
                  break;
               case 36:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(213, 217);
                  break;
               case 37:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(218, 223);
                  break;
               case 38:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjCheckNAdd(39);
                  break;
               case 40:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(39);
                  break;
               case 44:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 51:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 55:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 72:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 83:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(243, 244);
                  break;
               case 89:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(245, 246);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 114 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x20L) != 0L)
            return 4;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 93:
         return jjMoveStringLiteralDfa1_1(0x100L);
      case 124:
         return jjStartNfaWithStates_1(0, 69, 4);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 93:
         if ((active1 & 0x100L) != 0L)
            return jjStopAtPos(1, 72);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, 0L, active1);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 74;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(66, 67);
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                  }
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(72);
                  }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 4:
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(275, 278);
                  break;
               case 2:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 6:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 12:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 18:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 25:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 30:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(38, 40);
                  break;
               case 44:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 53:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 59:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 63:
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 66:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 67:
                  if ((0x3ff0000ffffd9ffL & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 68:
                  if (curChar == 10 && kind > 71)
                     kind = 71;
                  break;
               case 69:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x2400L & l) != 0L && kind > 71)
                     kind = 71;
                  break;
               case 71:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(72);
                  break;
               case 72:
                  if (curChar != 46)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 73:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(72);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(72);
                  }
                  else if (curChar == 124)
                     jjAddStates(279, 288);
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 4:
                  if (curChar == 108)
                     jjAddStates(289, 290);
                  else if (curChar == 102)
                     jjAddStates(291, 292);
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 38;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if (curChar != 116)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 5:
                  if (curChar != 98)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 8:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar != 116)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(12);
                  break;
               case 13:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 14:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar != 114)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(18);
                  break;
               case 18:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(18);
                  break;
               case 19:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar != 101)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(25);
                  break;
               case 25:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(25);
                  break;
               case 26:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar != 116)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(30);
                  break;
               case 30:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(30);
                  break;
               case 31:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 32:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 39:
                  if (curChar == 120 && kind > 68)
                     kind = 68;
                  break;
               case 40:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 42:
                  if (curChar == 102)
                     jjAddStates(291, 292);
                  break;
               case 43:
                  if (curChar != 115)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(44);
                  break;
               case 45:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 46:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar != 101)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(53);
                  break;
               case 53:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(53);
                  break;
               case 54:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 108)
                     jjAddStates(289, 290);
                  break;
               case 58:
                  if (curChar != 116)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(59);
                  break;
               case 59:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(59);
                  break;
               case 60:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar != 107)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(63);
                  break;
               case 63:
                  if ((0xefffffffdfffffffL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjCheckNAdd(63);
                  break;
               case 64:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 65:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 67:
                  if ((0x87fffffe07fffffeL & l) != 0L && kind > 70)
                     kind = 70;
                  break;
               case 71:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(72);
                  break;
               case 73:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(72);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(66, 67);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAdd(72);
                  }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 6:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 12:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 18:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 25:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 30:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 44:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 53:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 59:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 63:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 66:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 67:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 70)
                     kind = 70;
                  break;
               case 71:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAdd(72);
                  break;
               case 73:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(72);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 74 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 93:
         return jjStartNfaWithStates_0(0, 91, 7);
      case 124:
         return jjStopAtPos(0, 93);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 16;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 94)
                        kind = 94;
                     jjCheckNAddStates(293, 295);
                  }
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 94)
                        kind = 94;
                     jjCheckNAddStates(293, 295);
                  }
                  else if (curChar == 58)
                     jjCheckNAdd(1);
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     jjCheckNAdd(14);
                  }
                  else if ((0xfc00fffe00000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                  }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 1:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 58 && kind > 92)
                     kind = 92;
                  break;
               case 3:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 94;
                  jjCheckNAddStates(293, 295);
                  break;
               case 4:
                  if (curChar != 10)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjCheckNAddStates(293, 295);
                  break;
               case 5:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjCheckNAddStates(293, 295);
                  break;
               case 8:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x3ff6000ffffd9ffL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if ((0x3ff0000ffffd9ffL & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 12:
                  if ((0xfc00fffe00000000L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 13:
                  if ((0x3ff0000ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjCheckNAdd(14);
                  break;
               case 14:
                  if (curChar != 46)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff0000ffffd9ffL & l) != 0L)
                     jjCheckNAdd(14);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xefffffffdfffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  else if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 7;
                  if ((0x87fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     jjCheckNAdd(14);
                  }
                  else if ((0x78000001f8000001L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                  }
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 1:
                  if ((0xefffffffdfffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 7:
                  if (curChar != 93)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAdd(8);
                  break;
               case 8:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAdd(8);
                  break;
               case 9:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if ((0x87fffffe07fffffeL & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 12:
                  if ((0x78000001f8000001L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 13:
                  if ((0x87fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if ((0x87fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(14);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(10, 11);
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 96)
                        kind = 96;
                     jjCheckNAdd(14);
                  }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 8:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(10, 11);
                  break;
               case 11:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 96)
                     kind = 96;
                  break;
               case 13:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 96)
                     kind = 96;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(14);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 16 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   153, 154, 155, 156, 153, 155, 156, 152, 153, 155, 156, 106, 109, 113, 117, 119, 
   121, 124, 135, 158, 165, 103, 107, 110, 114, 118, 120, 123, 131, 136, 144, 149, 
   150, 3, 33, 34, 44, 56, 6, 10, 14, 15, 17, 22, 27, 32, 7, 6, 
   10, 11, 14, 15, 17, 22, 27, 16, 17, 22, 27, 17, 18, 19, 22, 27, 
   23, 24, 27, 35, 36, 22, 27, 35, 36, 39, 22, 27, 39, 40, 41, 22, 
   27, 47, 50, 51, 22, 27, 51, 52, 53, 22, 27, 63, 64, 65, 66, 63, 
   64, 65, 93, 91, 94, 95, 96, 97, 98, 93, 91, 94, 93, 91, 94, 95, 
   93, 91, 94, 95, 96, 93, 91, 94, 95, 96, 97, 127, 125, 128, 129, 130, 
   127, 125, 128, 127, 125, 128, 129, 140, 142, 146, 147, 159, 160, 162, 164, 160, 
   161, 162, 164, 160, 162, 164, 166, 167, 169, 170, 167, 168, 169, 170, 167, 169, 
   170, 68, 77, 95, 96, 98, 99, 96, 98, 99, 96, 97, 98, 99, 45, 48, 
   52, 56, 2, 3, 60, 8, 101, 108, 61, 76, 62, 42, 46, 49, 53, 57, 
   58, 59, 67, 68, 87, 92, 93, 32, 30, 33, 34, 35, 36, 37, 32, 30, 
   33, 32, 30, 33, 34, 32, 30, 33, 34, 35, 32, 30, 33, 34, 35, 36, 
   63, 61, 64, 65, 66, 63, 61, 64, 63, 61, 64, 65, 77, 78, 79, 80, 
   77, 78, 79, 83, 85, 89, 90, 102, 103, 105, 107, 103, 104, 105, 107, 103, 
   105, 107, 109, 110, 112, 113, 110, 111, 112, 113, 110, 112, 113, 47, 50, 54, 
   74, 10, 19, 37, 38, 40, 41, 4, 10, 16, 23, 28, 36, 37, 41, 42, 
   57, 61, 65, 51, 56, 3, 5, 6, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\174", null, null, "\135\135", null, null, "\175\175", null, null, null, null, null, 
null, "\74\57\162\145\146\76", null, null, null, "\47\47\47", "\47\47", "\133\133", 
"\133", null, "\135", null, "\174", null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "INT_LINK",
   "IMAGE",
   "INITIAL_CONTEXT",
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 
   3, 3, 3, 3, 3, 3, 3, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 3, 3, 3, 1, 3, 
   3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[171];
private final int[] jjstateSet = new int[342];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public MediawikiScannerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MediawikiScannerTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 171; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 3;
int defaultLexState = 3;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 88 :
        image.append(jjstrLiteralImages[88]);
        lengthOfMatch = jjstrLiteralImages[88].length();
                prevLexState = curLexState;
         break;
      case 91 :
        image.append(jjstrLiteralImages[91]);
        lengthOfMatch = jjstrLiteralImages[91].length();
                if (curLexState == MediawikiScannerConstants.INT_LINK)
                        SwitchTo(MediawikiScannerConstants.DEFAULT);
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                SwitchTo(prevLexState);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
